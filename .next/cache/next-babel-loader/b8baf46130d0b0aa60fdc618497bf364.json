{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/allison.mazzetti/Documents/next-doggo/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar About = function About(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2,\n      columnNumber: 3\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 5\n    }\n  }, \"Hello World 123\"));\n};\n\nexport default About;\n/* import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nconst key = process.env.API_KEY;\nconst secret = process.env.SECRET;\n// dog filters\nconst type = 'dog';\nconst status = 'adoptable';\n// token vars\nvar token, tokenType, expires;\n\n//renders\nfunction Index({ doggos }) {\n\treturn (\n\t<Layout>\n\t\t<div className=\"cards\">\n\t\t\t{doggos.map(doggo => (\t\t\t\n\t\t\t<div className=\"card\" key={doggo.id}>\t\n\t\t      \t<img src={doggo['photos'][0] && doggo['photos'][0]['medium'] ? doggo['photos'][0]['medium'] : '/cheyenne_hero.jpg'} className=\"dog-img-card\"></img>\t\n\t\t      \t<h2 className=\"badge\">{doggo.name}</h2>\t\n\t\t      \t<div className=\"dog-info\">\t\n\t\t        \t<p className=\"italic-text\">{doggo.breeds.primary}</p>\t\n\t\t        \t<p className=\"body-text\">{doggo.description}</p>\t\n\t\t      \t</div>\t\n\t\t      \t<div className=\"dog-data\">\t\n\t\t          \t<div className=\"data-section\">\t\n\t\t            \t<p className=\"italic-text label\">{doggo.size}</p>\t\n\t\t            \t<img src={`/${doggo.size}.png`} className=\"paws\"></img>\t\n\t\t          \t</div>\t\n\t\t          \t<div className=\"data-section\">\t\n\t\t            \t<p className=\"italic-text label\">Age</p>\t\n\t\t            \t<p className=\"results-text\">{doggo.age}</p>\t\n\t\t          \t</div>          \t\n\t\t          \t<div>\t\n\t\t            \t<p className=\"italic-text label\">Gender</p>\t\n\t\t            \t<p className=\"results-text\">{doggo.gender === 'Male' ? 'Good Boy' : 'Good Girl' }</p>\t\n\t\t            \t<img src={`/${doggo.gender}.png`} className=\"gender\"></img>\t\n\t\t          \t</div>\t\n\t\t       \t</div>\t\n\t       \t</div>\t\n\t       \t))}\n       \t</div>\n       \t<style jsx global>{`\n\t\t.cards {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: space-around;\n\t\t\tpadding: 0px 82px 0px 68px;\n\t\t\t--primary-color: #4ABDAC;\n\t\t\t--primary-hover: #2F8377;\n\t\t\t--light-color: #ffffff;\n\t\t\t--light-hover: #E1E8F0;\n\t\t\t--dark-color: #313D4B;\n\t\t\t--primary-font: 'Open Sans Condensed', sans-serif;\n\t\t\t--styled-font: 'Shadows Into Light', cursive;\t\n\t\t}\n\t\t.card {\n\t\t\twidth: 250px;\n\t\t\theight: 400px;\n\t\t\tmargin: 20px 28px 40px 0px;\n\t\t\tbackground-color: var(--light-color);\n\t\t\tbox-shadow: -10px 0px var(--primary-color), 0px -10px var(--primary-color), -10px -10px var(--primary-color);\n\t\t\tborder: 1px solid var(--dark-color);\n\t\t\tborder-bottom: 1px solid var(--primary-color);\t\n\t\t\tborder-right: 1px solid var(--primary-color);\n\t\t\tborder-top: 1px solid var(--light-color);\n\t\t\tborder-left: 1px solid var(--light-color);\n\t\t}\n\t\t.dog-img-card {\n\t\t\tmargin-bottom: -20px;\n\t\t\theight: 200px;\n\t\t\twidth: 250px;\n\t\t\tobject-fit: cover;\n\t\t}\n\t\t.badge {\n\t\t\tbackground-color: var(--primary-color);\n\t\t\tcolor: var(--light-color);\n\t\t\tfont-family: var(--styled-font);\n\t\t\tfont-size: 18px;\n\t\t\tpadding: 0px 30px;\n\t\t\tmargin: 0px 0px 0px -5px;\n\t\t\tdisplay: inline-flex;\n\t\t}\n\t\t.dog-info {\n\t\t\tpadding: 0px 10px 0px 10px;\n\t\t}\n\t\t.dog-data {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-around;\n\t\t\tpadding: 0px;\n\t\t\tmargin: 20px 0px 0px 0px;\n\t\t}\n\t\t.data-section {\n\t\t\tborder-right: 1px solid #d5d5d5;\n\t\t\tpadding-right: 15px;\n\t\t}\n\t\t.italic-text {\n\t\t\tfont-family: var(--primary-font);\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: 300;\n\t\t\tfont-style: italic;\n\t\t\tcolor: var(--dark-color);\n\t\t}\n\t\t.label {\n\t\t\tmargin-top: 0px;\n\t\t}\n\t\t.body-text {\n\t\t\tfont-family: var(--primary-font);\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 14px;\n\t\t\tcolor: var(--dark-color);;\n\t\t}\n\t\t.results-text {\n\t\t\tfont-family: var(--primary-font);\n\t\t\tcolor: var(--primary-color);\n\t\t\tfont-size: 14px;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.gender {\n\t\t\tdisplay: inline;\n\t\t}\n\t\t`}</style>\n  \t</Layout>\n\t)\n}\nvar getOAuth = function() {\n  return fetch('https://api.petfinder.com/v2/oauth2/token', {\n  method: 'POST',\n  body: 'grant_type=client_credentials&client_id=' + key + '&client_secret=' + secret,\n  headers: {\n\t'Content-Type': 'application/x-www-form-urlencoded'\n\t}\n  }).then(function(response) {\n\treturn response.json();\n  }).then(function(data) {\n\tconsole.log('token', data);\n\ttoken = data.access_token;\n\ttokenType = data.token_type;\n\texpires = new Date().getTime() + (data.expires_in * 1000);\n  }).catch(function(err) {\n\tconsole.log('something went wrong...', err);\n  });\n};  \n\nexport async function getServerSideProps() {\n\tconst getAuth = await getOAuth();\n\tconst getDoggos = await fetch('https://api.petfinder.com/v2/animals?' + 'type=' + type + '&status=' + status, {\n\t\theaders: {\n\t  \t'Authorization': tokenType + ' ' + token,\n\t  \t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t}\n\t});\n\tconst data = await getDoggos.json();\n\tconst doggos = data.animals;\n\n  return {\n    props: {\n\t\t\tdoggos\n\t\t}\n  };\n};\n\nexport default Index; */","map":{"version":3,"sources":["/Users/allison.mazzetti/Documents/next-doggo/pages/index.js"],"names":["About","props"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADiB;AAAA,CAAnB;;AAMA,eAAeD,KAAf;AAEA","sourcesContent":["const About = props => (\n  <div>\n    <p>Hello World 123</p>\n  </div>\n);\n\nexport default About;\n\n/* import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nconst key = process.env.API_KEY;\nconst secret = process.env.SECRET;\n// dog filters\nconst type = 'dog';\nconst status = 'adoptable';\n// token vars\nvar token, tokenType, expires;\n\n//renders\nfunction Index({ doggos }) {\n\treturn (\n\t<Layout>\n\t\t<div className=\"cards\">\n\t\t\t{doggos.map(doggo => (\t\t\t\n\t\t\t<div className=\"card\" key={doggo.id}>\t\n\t\t      \t<img src={doggo['photos'][0] && doggo['photos'][0]['medium'] ? doggo['photos'][0]['medium'] : '/cheyenne_hero.jpg'} className=\"dog-img-card\"></img>\t\n\t\t      \t<h2 className=\"badge\">{doggo.name}</h2>\t\n\t\t      \t<div className=\"dog-info\">\t\n\t\t        \t<p className=\"italic-text\">{doggo.breeds.primary}</p>\t\n\t\t        \t<p className=\"body-text\">{doggo.description}</p>\t\n\t\t      \t</div>\t\n\t\t      \t<div className=\"dog-data\">\t\n\t\t          \t<div className=\"data-section\">\t\n\t\t            \t<p className=\"italic-text label\">{doggo.size}</p>\t\n\t\t            \t<img src={`/${doggo.size}.png`} className=\"paws\"></img>\t\n\t\t          \t</div>\t\n\t\t          \t<div className=\"data-section\">\t\n\t\t            \t<p className=\"italic-text label\">Age</p>\t\n\t\t            \t<p className=\"results-text\">{doggo.age}</p>\t\n\t\t          \t</div>          \t\n\t\t          \t<div>\t\n\t\t            \t<p className=\"italic-text label\">Gender</p>\t\n\t\t            \t<p className=\"results-text\">{doggo.gender === 'Male' ? 'Good Boy' : 'Good Girl' }</p>\t\n\t\t            \t<img src={`/${doggo.gender}.png`} className=\"gender\"></img>\t\n\t\t          \t</div>\t\n\t\t       \t</div>\t\n\t       \t</div>\t\n\t       \t))}\n       \t</div>\n       \t<style jsx global>{`\n\t\t.cards {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: space-around;\n\t\t\tpadding: 0px 82px 0px 68px;\n\t\t\t--primary-color: #4ABDAC;\n\t\t\t--primary-hover: #2F8377;\n\t\t\t--light-color: #ffffff;\n\t\t\t--light-hover: #E1E8F0;\n\t\t\t--dark-color: #313D4B;\n\t\t\t--primary-font: 'Open Sans Condensed', sans-serif;\n\t\t\t--styled-font: 'Shadows Into Light', cursive;\t\n\t\t}\n\t\t.card {\n\t\t\twidth: 250px;\n\t\t\theight: 400px;\n\t\t\tmargin: 20px 28px 40px 0px;\n\t\t\tbackground-color: var(--light-color);\n\t\t\tbox-shadow: -10px 0px var(--primary-color), 0px -10px var(--primary-color), -10px -10px var(--primary-color);\n\t\t\tborder: 1px solid var(--dark-color);\n\t\t\tborder-bottom: 1px solid var(--primary-color);\t\n\t\t\tborder-right: 1px solid var(--primary-color);\n\t\t\tborder-top: 1px solid var(--light-color);\n\t\t\tborder-left: 1px solid var(--light-color);\n\t\t}\n\t\t.dog-img-card {\n\t\t\tmargin-bottom: -20px;\n\t\t\theight: 200px;\n\t\t\twidth: 250px;\n\t\t\tobject-fit: cover;\n\t\t}\n\t\t.badge {\n\t\t\tbackground-color: var(--primary-color);\n\t\t\tcolor: var(--light-color);\n\t\t\tfont-family: var(--styled-font);\n\t\t\tfont-size: 18px;\n\t\t\tpadding: 0px 30px;\n\t\t\tmargin: 0px 0px 0px -5px;\n\t\t\tdisplay: inline-flex;\n\t\t}\n\t\t.dog-info {\n\t\t\tpadding: 0px 10px 0px 10px;\n\t\t}\n\t\t.dog-data {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-around;\n\t\t\tpadding: 0px;\n\t\t\tmargin: 20px 0px 0px 0px;\n\t\t}\n\t\t.data-section {\n\t\t\tborder-right: 1px solid #d5d5d5;\n\t\t\tpadding-right: 15px;\n\t\t}\n\t\t.italic-text {\n\t\t\tfont-family: var(--primary-font);\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: 300;\n\t\t\tfont-style: italic;\n\t\t\tcolor: var(--dark-color);\n\t\t}\n\t\t.label {\n\t\t\tmargin-top: 0px;\n\t\t}\n\t\t.body-text {\n\t\t\tfont-family: var(--primary-font);\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: 14px;\n\t\t\tcolor: var(--dark-color);;\n\t\t}\n\t\t.results-text {\n\t\t\tfont-family: var(--primary-font);\n\t\t\tcolor: var(--primary-color);\n\t\t\tfont-size: 14px;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.gender {\n\t\t\tdisplay: inline;\n\t\t}\n\t\t`}</style>\n  \t</Layout>\n\t)\n}\nvar getOAuth = function() {\n  return fetch('https://api.petfinder.com/v2/oauth2/token', {\n  method: 'POST',\n  body: 'grant_type=client_credentials&client_id=' + key + '&client_secret=' + secret,\n  headers: {\n\t'Content-Type': 'application/x-www-form-urlencoded'\n\t}\n  }).then(function(response) {\n\treturn response.json();\n  }).then(function(data) {\n\tconsole.log('token', data);\n\ttoken = data.access_token;\n\ttokenType = data.token_type;\n\texpires = new Date().getTime() + (data.expires_in * 1000);\n  }).catch(function(err) {\n\tconsole.log('something went wrong...', err);\n  });\n};  \n\nexport async function getServerSideProps() {\n\tconst getAuth = await getOAuth();\n\tconst getDoggos = await fetch('https://api.petfinder.com/v2/animals?' + 'type=' + type + '&status=' + status, {\n\t\theaders: {\n\t  \t'Authorization': tokenType + ' ' + token,\n\t  \t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t}\n\t});\n\tconst data = await getDoggos.json();\n\tconst doggos = data.animals;\n\n  return {\n    props: {\n\t\t\tdoggos\n\t\t}\n  };\n};\n\nexport default Index; */"]},"metadata":{},"sourceType":"module"}